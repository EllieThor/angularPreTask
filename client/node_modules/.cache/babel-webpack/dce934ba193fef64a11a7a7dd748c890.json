{"ast":null,"code":"import _asyncToGenerator from \"C:/JOHN BRYCE/lessons/2021/07/13.07.21/angularPreTask/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./api.service\";\nimport * as i2 from \"@angular/router\";\nexport class WomenService {\n  constructor(apiService, nav // public userService: UsersService\n  ) {\n    this.apiService = apiService;\n    this.nav = nav;\n    this._womenARR = [];\n    this._currentUser = [];\n    this.result = {};\n    this._womanNameInput = '';\n    this._dateOfBirthInput = '';\n    this._countryInput = '';\n    this._descriptionInput = '';\n  } // api:  http://www.localhost:5004/women/getWomenByUserID?UserID=1\n\n\n  getWomenByUserID(url) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this._womenARR = yield _this.apiService.createGetService(url);\n      console.log('_womenARR: ', _this._womenARR);\n    })();\n  } //   // DELETE (woman)\n  // exports.deleteWomanByID = async (req, res) => {\n  //   let woman = await con.execute(`DELETE FROM women WHERE ID=${req.query.ID}`);\n  //   res.send(woman[0]);\n  // };\n\n\n  deleteWomen(url, userId) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      // console.log('userId: ', userId);\n      // console.log('url: ', url);\n      _this2.result = yield _this2.apiService.createGetService(url + userId); // this.getWomenByUserID(`/women/getWomenByUserID?UserID=${userId}`);\n      // console.log('_womenARR AFTER delete: ', this._womenARR);\n      // this.nav.navigate(['womenList']);\n    })();\n  } // URL:   http://www.localhost:5004/women/deleteWomanByID?ID=\n\n\n  addWomanByUserID(url, userId) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this3._womanNameInput === '' || _this3._dateOfBirthInput === '' || _this3._countryInput === '' || _this3._descriptionInput === '') {\n        alert('All fields must be provided');\n      } else {\n        let newWomanOB = {\n          WomanName: _this3._womanNameInput,\n          DateOfBirth: _this3._dateOfBirthInput,\n          Country: _this3._countryInput,\n          Description: _this3._descriptionInput,\n          UserID: userId\n        };\n        console.log('newWomanOB: ', newWomanOB);\n        _this3.result = yield _this3.apiService.createPostService(url, newWomanOB);\n\n        _this3.getWomenByUserID(`/women/getWomenByUserID?UserID=${userId}`);\n\n        console.log('_womenARR WITH NEW: ', _this3._womenARR);\n\n        _this3.nav.navigate(['womenList']);\n      }\n    })();\n  }\n\n}\n\nWomenService.ɵfac = function WomenService_Factory(t) {\n  return new (t || WomenService)(i0.ɵɵinject(i1.ApiService), i0.ɵɵinject(i2.Router));\n};\n\nWomenService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: WomenService,\n  factory: WomenService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:\\JOHN BRYCE\\lessons\\2021\\07\\13.07.21\\angularPreTask\\client\\src\\app\\services\\women.service.ts"],"names":[],"mappings":";;;;AASA,OAAM,MAAO,YAAP,CAAmB;AASvB,EAAA,WAAA,CACS,UADT,EAES,GAFT,CAEqB;AAFrB,I;AACS,SAAA,UAAA,GAAA,UAAA;AACA,SAAA,GAAA,GAAA,GAAA;AAVT,SAAA,SAAA,GAA0B,EAA1B;AACA,SAAA,YAAA,GAA4B,EAA5B;AACA,SAAA,MAAA,GAAc,EAAd;AAEA,SAAA,eAAA,GAA0B,EAA1B;AACA,SAAA,iBAAA,GAA4B,EAA5B;AACA,SAAA,aAAA,GAAwB,EAAxB;AACA,SAAA,iBAAA,GAA4B,EAA5B;AAII,GAZmB,CAavB;;;AACM,EAAA,gBAAgB,CAAC,GAAD,EAAY;AAAA;;AAAA;AAChC,MAAA,KAAI,CAAC,SAAL,SAAwB,KAAI,CAAC,UAAL,CAAgB,gBAAhB,CACtB,GADsB,CAAxB;AAGA,MAAA,OAAO,CAAC,GAAR,CAAY,aAAZ,EAA2B,KAAI,CAAC,SAAhC;AAJgC;AAKjC,GAnBsB,CAqBvB;AACA;AACA;AACA;AACA;;;AAEM,EAAA,WAAW,CAAC,GAAD,EAAc,MAAd,EAA6B;AAAA;;AAAA;AAC5C;AACA;AACA,MAAA,MAAI,CAAC,MAAL,SAAqB,MAAI,CAAC,UAAL,CAAgB,gBAAhB,CAAiC,GAAG,GAAG,MAAvC,CAArB,CAH4C,CAI5C;AACA;AACA;AAN4C;AAO7C,GAlCsB,CAmCvB;;;AAEM,EAAA,gBAAgB,CAAC,GAAD,EAAc,MAAd,EAA6B;AAAA;;AAAA;AACjD,UACE,MAAI,CAAC,eAAL,KAAyB,EAAzB,IACA,MAAI,CAAC,iBAAL,KAA2B,EAD3B,IAEA,MAAI,CAAC,aAAL,KAAuB,EAFvB,IAGA,MAAI,CAAC,iBAAL,KAA2B,EAJ7B,EAKE;AACA,QAAA,KAAK,CAAC,6BAAD,CAAL;AACD,OAPD,MAOO;AACL,YAAI,UAAU,GAAG;AACf,UAAA,SAAS,EAAE,MAAI,CAAC,eADD;AAEf,UAAA,WAAW,EAAE,MAAI,CAAC,iBAFH;AAGf,UAAA,OAAO,EAAE,MAAI,CAAC,aAHC;AAIf,UAAA,WAAW,EAAE,MAAI,CAAC,iBAJH;AAKf,UAAA,MAAM,EAAE;AALO,SAAjB;AAQA,QAAA,OAAO,CAAC,GAAR,CAAY,cAAZ,EAA4B,UAA5B;AACA,QAAA,MAAI,CAAC,MAAL,SAAqB,MAAI,CAAC,UAAL,CAAgB,iBAAhB,CACnB,GADmB,EAEnB,UAFmB,CAArB;;AAIA,QAAA,MAAI,CAAC,gBAAL,CAAsB,kCAAkC,MAAM,EAA9D;;AACA,QAAA,OAAO,CAAC,GAAR,CAAY,sBAAZ,EAAoC,MAAI,CAAC,SAAzC;;AACA,QAAA,MAAI,CAAC,GAAL,CAAS,QAAT,CAAkB,CAAC,WAAD,CAAlB;AACD;AAzBgD;AA0BlD;;AA/DsB;;;mBAAZ,Y,EAAY,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,UAAA,C,EAAA,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,MAAA,C;AAAA,C;;;SAAZ,Y;AAAY,EAAA,OAAA,EAAZ,YAAY,CAAA,I;AAAA,EAAA,UAAA,EAFX","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { User, Woman } from '../models/models';\r\nimport { ApiService } from './api.service';\r\nimport { UsersService } from './users.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class WomenService {\r\n  _womenARR: Array<Woman> = [];\r\n  _currentUser: Array<User> = [];\r\n  result: any = {};\r\n\r\n  _womanNameInput: string = '';\r\n  _dateOfBirthInput: string = '';\r\n  _countryInput: string = '';\r\n  _descriptionInput: string = '';\r\n  constructor(\r\n    public apiService: ApiService,\r\n    public nav: Router // public userService: UsersService\r\n  ) {}\r\n  // api:  http://www.localhost:5004/women/getWomenByUserID?UserID=1\r\n  async getWomenByUserID(url: string) {\r\n    this._womenARR = (await this.apiService.createGetService(\r\n      url\r\n    )) as Array<Woman>;\r\n    console.log('_womenARR: ', this._womenARR);\r\n  }\r\n\r\n  //   // DELETE (woman)\r\n  // exports.deleteWomanByID = async (req, res) => {\r\n  //   let woman = await con.execute(`DELETE FROM women WHERE ID=${req.query.ID}`);\r\n  //   res.send(woman[0]);\r\n  // };\r\n\r\n  async deleteWomen(url: string, userId?: number) {\r\n    // console.log('userId: ', userId);\r\n    // console.log('url: ', url);\r\n    this.result = (await this.apiService.createGetService(url + userId)) as any;\r\n    // this.getWomenByUserID(`/women/getWomenByUserID?UserID=${userId}`);\r\n    // console.log('_womenARR AFTER delete: ', this._womenARR);\r\n    // this.nav.navigate(['womenList']);\r\n  }\r\n  // URL:   http://www.localhost:5004/women/deleteWomanByID?ID=\r\n\r\n  async addWomanByUserID(url: string, userId?: number) {\r\n    if (\r\n      this._womanNameInput === '' ||\r\n      this._dateOfBirthInput === '' ||\r\n      this._countryInput === '' ||\r\n      this._descriptionInput === ''\r\n    ) {\r\n      alert('All fields must be provided');\r\n    } else {\r\n      let newWomanOB = {\r\n        WomanName: this._womanNameInput,\r\n        DateOfBirth: this._dateOfBirthInput,\r\n        Country: this._countryInput,\r\n        Description: this._descriptionInput,\r\n        UserID: userId,\r\n      };\r\n\r\n      console.log('newWomanOB: ', newWomanOB);\r\n      this.result = (await this.apiService.createPostService(\r\n        url,\r\n        newWomanOB\r\n      )) as any;\r\n      this.getWomenByUserID(`/women/getWomenByUserID?UserID=${userId}`);\r\n      console.log('_womenARR WITH NEW: ', this._womenARR);\r\n      this.nav.navigate(['womenList']);\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}