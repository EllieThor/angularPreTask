{"ast":null,"code":"import _asyncToGenerator from \"C:/JOHN BRYCE/lessons/2021/07/13.07.21/angularPreTask/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./api.service\";\nexport class BankService {\n  constructor(apiService) {\n    this.apiService = apiService;\n    this._actions = [];\n    this.result = {};\n    this._accountInput = '';\n    this._currentActionType = 0;\n    this._currentAccountID = 0;\n    this._currentAmount = 0;\n    this._currentCredit = 0;\n    this._currentPayQnt = 0;\n\n    this.actionTypeClick = type => {\n      this._currentActionType = type;\n      console.log('type: ', this._currentActionType);\n    };\n\n    this.addNewActionClick = () => {\n      let newAction = {\n        AccountID: this._currentAccountID,\n        ActionType: this._currentActionType,\n        Amount: this._currentAmount,\n        Credit: this._currentCredit,\n        payQnt: this._currentPayQnt\n      };\n      console.log('newAction: ', newAction);\n      this.addNewAction('/account/actions/addAction', newAction);\n    };\n  }\n\n  getAllActionsById(url) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this._actions = yield _this.apiService.createGetService(`${url}?AccountID=${_this._accountInput}`);\n      console.log('Action: ', _this._actions);\n    })();\n  }\n\n  addNewAction(url, ob) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      console.log('url: ', url, '  ob: ', ob);\n      _this2.result = yield _this2.apiService.createPostService(url, ob);\n      console.log('result: ', _this2.result);\n      if (_this2.result.affectedRows === 1) _this2.getAllActionsById('/accounts/getActionsById');\n    })();\n  }\n\n}\n\nBankService.ɵfac = function BankService_Factory(t) {\n  return new (t || BankService)(i0.ɵɵinject(i1.ApiService));\n};\n\nBankService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BankService,\n  factory: BankService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:\\JOHN BRYCE\\lessons\\2021\\07\\13.07.21\\angularPreTask\\client\\src\\app\\services\\bank.service.ts"],"names":[],"mappings":";;;AAMA,OAAM,MAAO,WAAP,CAAkB;AAUtB,EAAA,WAAA,CAAmB,UAAnB,EAAyC;AAAtB,SAAA,UAAA,GAAA,UAAA;AATnB,SAAA,QAAA,GAA0B,EAA1B;AACA,SAAA,MAAA,GAAc,EAAd;AACA,SAAA,aAAA,GAAwB,EAAxB;AAEA,SAAA,kBAAA,GAA6B,CAA7B;AACA,SAAA,iBAAA,GAA4B,CAA5B;AACA,SAAA,cAAA,GAAyB,CAAzB;AACA,SAAA,cAAA,GAAyB,CAAzB;AACA,SAAA,cAAA,GAAyB,CAAzB;;AAkBA,SAAA,eAAA,GAAmB,IAAD,IAAiB;AACjC,WAAK,kBAAL,GAA0B,IAA1B;AACA,MAAA,OAAO,CAAC,GAAR,CAAY,QAAZ,EAAsB,KAAK,kBAA3B;AACD,KAHD;;AAKA,SAAA,iBAAA,GAAoB,MAAK;AACvB,UAAI,SAAS,GAAG;AACd,QAAA,SAAS,EAAE,KAAK,iBADF;AAEd,QAAA,UAAU,EAAE,KAAK,kBAFH;AAGd,QAAA,MAAM,EAAE,KAAK,cAHC;AAId,QAAA,MAAM,EAAE,KAAK,cAJC;AAKd,QAAA,MAAM,EAAE,KAAK;AALC,OAAhB;AAOA,MAAA,OAAO,CAAC,GAAR,CAAY,aAAZ,EAA2B,SAA3B;AACA,WAAK,YAAL,CAAkB,4BAAlB,EAAgD,SAAhD;AACD,KAVD;AAtB6C;;AAEvC,EAAA,iBAAiB,CAAC,GAAD,EAAY;AAAA;;AAAA;AACjC,MAAA,KAAI,CAAC,QAAL,SAAuB,KAAI,CAAC,UAAL,CAAgB,gBAAhB,CACrB,GAAG,GAAG,cAAc,KAAI,CAAC,aAAa,EADjB,CAAvB;AAGA,MAAA,OAAO,CAAC,GAAR,CAAY,UAAZ,EAAwB,KAAI,CAAC,QAA7B;AAJiC;AAKlC;;AAEK,EAAA,YAAY,CAAC,GAAD,EAAc,EAAd,EAAqB;AAAA;;AAAA;AACrC,MAAA,OAAO,CAAC,GAAR,CAAY,OAAZ,EAAqB,GAArB,EAA0B,QAA1B,EAAoC,EAApC;AACA,MAAA,MAAI,CAAC,MAAL,SAAqB,MAAI,CAAC,UAAL,CAAgB,iBAAhB,CAAkC,GAAlC,EAAuC,EAAvC,CAArB;AACA,MAAA,OAAO,CAAC,GAAR,CAAY,UAAZ,EAAwB,MAAI,CAAC,MAA7B;AACA,UAAI,MAAI,CAAC,MAAL,CAAY,YAAZ,KAA6B,CAAjC,EACE,MAAI,CAAC,iBAAL,CAAuB,0BAAvB;AALmC;AAMtC;;AAzBqB;;;mBAAX,W,EAAW,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,UAAA,C;AAAA,C;;;SAAX,W;AAAW,EAAA,OAAA,EAAX,WAAW,CAAA,I;AAAA,EAAA,UAAA,EAFV","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Action } from '../models/models';\r\nimport { ApiService } from './api.service';\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BankService {\r\n  _actions: Array<Action> = [];\r\n  result: any = {};\r\n  _accountInput: string = '';\r\n\r\n  _currentActionType: number = 0;\r\n  _currentAccountID: number = 0;\r\n  _currentAmount: number = 0;\r\n  _currentCredit: number = 0;\r\n  _currentPayQnt: number = 0;\r\n  constructor(public apiService: ApiService) {}\r\n\r\n  async getAllActionsById(url: string) {\r\n    this._actions = (await this.apiService.createGetService(\r\n      `${url}?AccountID=${this._accountInput}`\r\n    )) as Array<Action>;\r\n    console.log('Action: ', this._actions);\r\n  }\r\n\r\n  async addNewAction(url: string, ob: any) {\r\n    console.log('url: ', url, '  ob: ', ob);\r\n    this.result = (await this.apiService.createPostService(url, ob)) as any;\r\n    console.log('result: ', this.result);\r\n    if (this.result.affectedRows === 1)\r\n      this.getAllActionsById('/accounts/getActionsById');\r\n  }\r\n\r\n  actionTypeClick = (type: number) => {\r\n    this._currentActionType = type;\r\n    console.log('type: ', this._currentActionType);\r\n  };\r\n\r\n  addNewActionClick = () => {\r\n    let newAction = {\r\n      AccountID: this._currentAccountID,\r\n      ActionType: this._currentActionType,\r\n      Amount: this._currentAmount,\r\n      Credit: this._currentCredit,\r\n      payQnt: this._currentPayQnt,\r\n    };\r\n    console.log('newAction: ', newAction);\r\n    this.addNewAction('/account/actions/addAction', newAction);\r\n  };\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}